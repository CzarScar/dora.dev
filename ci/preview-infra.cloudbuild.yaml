steps:
  - id: 'Stage FirebaseConfigs'
    name: 'bash'
    env:
      - 'PROJECT_ID=$PROJECT_ID'
    script: |
      # Copy correct Firestore config per project
      cp -v ci/firebase-config.${PROJECT_ID}.js /workspace/hugo/static/js/firebase-config.js

      # Get Key for Firebase Integration Testing
      mkdir secrets
      echo "${APPSPOT_KEY_TOKEN}" > secrets/${PROJECT_ID}-private-key.json
    secretEnv: ['APPSPOT_KEY_TOKEN']

  - id: 'Svelte / Hugo Build Staging Site'
    name: 'node'
    script: |
      #! /usr/bin/env bash

      # Build Quick Check and move generated files into position
      echo "Using Node version $(node --version)"
      ./svelte/quick-check-2023/build-quick-check.sh

      # install hugo "extended"
      HUGO_VERSION=0.114.1
      wget https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb -O /tmp/hugo.deb

      apt install /tmp/hugo.deb

      # Build the staging version of the site, with drafts enabled
      hugo -s ./hugo -d /workspace/hugo/public --logLevel=debug --buildDrafts

  - id: 'Node Install'
    name: 'gcr.io/cloud-builders/npm:node-18.12.0'
    entrypoint: npm
    dir: 'functions/inquiry-monitor'
    args: ['install']

  - id: 'Firebase (re)Deploy All'
    name: 'ubuntu'
    env:
      - 'PROJECT_ID=$PROJECT_ID'
    script: |
      apt update && apt install curl sudo -y
      curl -sL https://firebase.tools | bash
      firebase deploy --non-interactive --force --project=${PROJECT_ID}

  - id: 'CI Testing'
    name: 'gcr.io/cloud-builders/npm:node-18.12.0'
    entrypoint: npm
    dir: 'functions/inquiry-monitor'
    args: ['run', 'int-test']
    env:
      - 'PROJECT_ID=$PROJECT_ID'

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/appspot_gserviceaccount_com/versions/latest
    env: 'APPSPOT_KEY_TOKEN'